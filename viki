#!/usr/bin/env node

/*
 * viki, secure wiki engine
 * http://github.com/nomicoin/viki
 * 
 * Forked from http://github.com/claudioc/jingo
 * Released under the MIT license
 */
var program = require('commander'),
    http    = require('http'),
    tools   = require('./lib/tools'),
    config  = require('./lib/config'),
    http    = require('http'),
    fs      = require('fs'),
    os      = require('os'),
    semver  = require('semver');

program.version('1.2.10')
       .option('-c, --config <path>', 'Specify the config file')
       .option('-#, --hash-string <string>', 'Create an hash for a string')
       .option('-l, --local', 'Listen on localhost only')
       .option('-s, --sample-config', 'Dumps a config file template and exits')
       .parse(process.argv);

if (program.sampleConfig) {
  console.log(config.sample());
  process.exit(0);
}

if (program.hashString) {
  console.log(tools.hashify(program.hashString));
  process.exit(0);
}

if (!program.config || !fs.existsSync(program.config)) {
  program.help();
  process.exit(-1);
}

if (!config.load(program.config)) {
  console.log("Error: " + config.getError());
  process.exit(-1);
}

if (!config.validate()) {
  console.log("Error: " + config.getError());
  process.exit(-1);
}

var refspec = config.get("application").remote.split(/\s+/);

start();

function start() {

  var app = require("./lib/app").initialize(config);

  var listenAddr = process.env.NW_ADDR || "";
  if (config.get("server").localOnly) {
    listenAddr = "localhost";
  }

  http.createServer(app).listen(config.get("server").port, listenAddr, function() {
    console.log((new Date()) + " - Viki%sserver v%s listening on port %s", config.get("server").localOnly ? " (local) " : " ", program.version(), config.get("server").port);
  });
}
